{"meta":{"title":"문과생 코딩 개척기","subtitle":"풀스택 개발자가 되는 날까지","description":"간간히 팁들을 올리는 개발 블로그","author":"Caesiumy","url":"https://caesiumy.github.io","root":"/"},"pages":[{"title":"all-archives","date":"2019-03-27T12:07:42.129Z","updated":"2019-03-27T12:07:42.129Z","comments":false,"path":"all-archives/index.html","permalink":"https://caesiumy.github.io/all-archives/index.html","excerpt":"","text":""},{"title":"all-categories","date":"2019-03-27T12:07:26.290Z","updated":"2019-03-27T12:07:26.290Z","comments":false,"path":"all-categories/index.html","permalink":"https://caesiumy.github.io/all-categories/index.html","excerpt":"","text":""},{"title":"all-tags","date":"2019-03-27T12:08:00.619Z","updated":"2019-03-27T12:08:00.619Z","comments":false,"path":"all-tags/index.html","permalink":"https://caesiumy.github.io/all-tags/index.html","excerpt":"","text":""}],"posts":[{"title":"<파이썬 라이브러리로 배우는 딥러닝 입문과 응용> 후기","slug":"python-library-deep-learning-book","date":"2019-07-18T16:05:32.000Z","updated":"2019-07-18T17:41:05.585Z","comments":true,"path":"2019/07/19/python-library-deep-learning-book/","link":"","permalink":"https://caesiumy.github.io/2019/07/19/python-library-deep-learning-book/","excerpt":"멋쟁이 사자처럼 이벤트에 당첨되어 얼떨결에 받게 된 책! 과연 어떤 책일까?","text":"이 책 받고 방학동안 코딩길만 걸어 EVENT멋사 유튜브를 구독하고, 인증하면 책을 준다고 했길래 반신 반의하며 응모… 결과는 당첨… 어쩔 수 없다 이렇게 된 이상 약속한 대로 리뷰 가자 본인은 고양이를 인질로 잡은 책에 투표했다... 스터디잼구글 머신러닝 스터디잼 입문 - 중급 - 심화반 모두를 하면서 뼈저리게 느꼈던 것은 바로 머신러닝은 어렵구나. 그래서 딥러닝이 아닌 고양이를 골랐다 암튼 이렇게 된 이상! 운명이라 생각하고 달려볼 예정!! 받고 나서 찰칵 어려워위에서 말했듯이 머신러닝은 어려웠다. 영어라 그런 점도 있었겠지만, 무엇보다도 문과 출신인 내가 이해하기 어려운 수학 공식이 여름철 모기마냥 나를 물어뜯었다ㅠㅠ 근데 이번엔 다르다. 일단 무려 한글이라구!! 그리고 다행히 스터디잼 시절에 배운 여러 용어들이 책에서도 쓰였기에 왠만큼은 이해가 가능했다. 하지만… 한글의 장단점 단점1. (문과 출신이라) 말이 안 통한다…머신러닝에서 배웠던 개념들은 그렇다 치자. 문제는 수학개념들… 전혀 처음 보는 부호(?)를 사용하고 있는 것부터가 압박감이 장난이 아니다. 저걸 세타라고 했던가… 2. 입문이라고 치기엔 높은 난이도머신러닝 딥러닝이 어렵다는 것은 모두 알고 있을 사실이다.그걸 알고서도 투표율이 제일 높았다… 다들 머신러닝 안 해본 것이 분명하다ㅂㄷㅂㄷ 이 책이 칭하는 입문이라는 단어의 정의는 머신러닝을 이해하고, 이제 딥러닝에 입문 하려는 사람들을 일컫는다. 장점1. 코드가 있어서 따라해보기 좋다.일단 내용을 이해하지 못하더라도, 코드를 따라하며 실습할 수 있는 기회가 주어진다. 옛날에 했던 파일구조 교재의 코드가 뒤죽박죽이었던 것을 기억하면 감지덕지 2. 그래서 순서대로 따라가기 좋다.순전히 레퍼런스용 책이 아닌, 입문자들이 사용할 순서대로 따라가는 것이 책이 보여주는 구성방식이다. 물론 입문자는 ‘그’ 입문자가 아니겠지만…프로그래밍 입문자를 뜻하는 것이 아니다!! 3. 한글이다.AI의 경우에는 해외에서 쓰인 영어로 된 문서들이 대부분이다. 그런 시대에서 한글로 된 AI 서적은 다다익선!! 4. 흥미로운 챕터명보드게임에서의 딥러닝, 컴퓨터 게임에 딥러닝 적용하기, 침입 탐지 시스템 만들기… 듣기만해도 어서 책을 읽어보고 싶어진다. 끝으로내가 머신러닝, 딥러닝에 입문해보겠다!! 라고 시작하는 사람들에게는 비추한다. 다만 내 진로가 데이터 과학자이고, 머신러닝 경험을 가지고 있으며, 충분한 수학적 지식이 있다면 나쁘지 않은 선택이 될 것이다. 여기도 개인 SNS 맞죠? 멋사에서 직접 만든 것 같은 종이와 함께 끝! (대충 사자 아이콘) 구매 링크응24교차공원","categories":[{"name":"book","slug":"book","permalink":"https://caesiumy.github.io/categories/book/"},{"name":"IT","slug":"book/IT","permalink":"https://caesiumy.github.io/categories/book/IT/"}],"tags":[{"name":"python","slug":"python","permalink":"https://caesiumy.github.io/tags/python/"},{"name":"book","slug":"book","permalink":"https://caesiumy.github.io/tags/book/"},{"name":"IT","slug":"IT","permalink":"https://caesiumy.github.io/tags/IT/"},{"name":"AI","slug":"AI","permalink":"https://caesiumy.github.io/tags/AI/"}]},{"title":"19년도 상반기 구글 스터디 잼 <머신러닝> 후기","slug":"study-jam-review-19","date":"2019-05-02T13:47:39.000Z","updated":"2019-05-06T10:29:51.667Z","comments":true,"path":"2019/05/02/study-jam-review-19/","link":"","permalink":"https://caesiumy.github.io/2019/05/02/study-jam-review-19/","excerpt":"올해 2월 입문반부터 시작한 구글 스터디 잼 머신러닝!중급반 후기를 들려드립니다!","text":"구글 스터디 잼이란?쉽게 말해 구글에서 교육 컨텐츠를 제공해주는 스터디 프로그램입니다.기본적으로 두 개의 코스로 나뉘는데요. 머신러닝 (짝수 달) 클라우드 (홀수 달) 짝수달에는 구글 스터디 잼 머신러닝 편이,홀수달에는 구글 스터디 잼 클라우드 편이 진행됩니다. 스터디 잼 일정 자세한 정보는 스터디 잼 머신러닝 입문반 링크에서! 신청 동기의외로 정보를 찾다가 발견한 것은 아닙니다.그저 다니던 동아리의 대표 단톡방에서 어떤 분이 추천해주셨습니다. 하하핫 기존에 머신러닝, 딥러닝을 경험해보고 싶었던 터라,신청하기로 마음 먹었죠! 신기술은 취업에 도움이 된다. 게다가 무려 구글에서 주최하고!무료로 교육 컨텐츠를 제공함과 동시에 1달 프리패스권까지!!거기에다 수료 격려를 위해 수료 기념품까지 제공!중요 입문반 수료 기념품이 도착했을 때! 하지만 올해는 작년과 달리 구글 한국 본사 견학은 없다고 해서 쪼끔 실망했었습니다.뭐 지방사람이라 교통비 굳었다고 긍정적으로 생각하죠! 입문반을 신청했으니 다음 단계도 하고 싶은 사람이 분명 있을 거라고 생각해서(저 포함)중급반 신청이 열리기까지 버티다가 바로 신청했습니다! 그룹원 모집방법사실 사람이 이렇게 많이 모일 것이라고는 기대하지 않았었습니다.그래서 동아리랑, 지인 중 뭐어어언가 머신 러닝에 관심이 있을 만한 분들께 추천드렸죠. 그리고 그 결과…입문반 인원만 무려 13명이 되어버리는 과포화상태가 시작되었습니다…덕분에 이메일 치는 것도 일이고, 기념품 배분도 바빴더랬죠. 물론 2팀으로 나누는 것도 생각해보았으나, 다들 저를 구심점으로 모이신 분들이라 팀을 나누기 애매하여 그대로 진행하는 수 밖에 없었습니다. 그래도 중급반은 이러한 사태를 막기 위해 입문반을 마친 분들만 모셔서 중급반으로 진출하였습니다. 그래서 몇 명이냐구요…?? 그래도 10명이었습니다. 하하핳 수료 기념품 중 하나인 구글 클라우드 스티커를 붙인 모습! 저의 경우는 이렇게 지인들에게 연락을 돌려 모집했는데,다른 분들은 구글 스터디 잼 페이스북 그룹 또는 다른 커뮤니티에서 그룹원들을 구하시더라구요. 예를 들어 제 동아리에서는 자유 게시판에 글을 올리시거나 하는 방법으로요. 그룹장으로 활동하고 싶으시면 위의 방법을 활용해보세요! 스터디 진행 방식지인들로 구성된 파티지만 다들 여러 각지에서 모인 대학생인 데다가, 다른 학교를 다니는 분들도 여럿 계셨기 때문에 불가피하게 온라인 스터디를 지향했습니다. 일단은 제가 그룹장이다보니, 그룹원 모두에게 이메일을 돌리고, 그룹의 소통을 위한 오픈 카톡방을 만들어 일정 공지를 하는 등 최소한의 역할부터 시작해서, 수료 확인 폼 제출 가이드라인도 만들어 배포하고, 수시로 스터디 잼 슬랙(입문방 당시)과 페이스북 그룹을 확인하여 새로운 소식이 업데이트 될 때마다 톡방을 통해 전했습니다. 또한 중급반 당시에는 코세라 강의 비공식 번역팀까지…마지막 챕터에서 3개 정도의 강의를 번역했었는데 그룹원들이 제가 한 파트를 알아챘으려나 모르겠네요. 하핳 아무튼 그래서!완전한 온라인 스터디를 목표로, 톡방을 통해 거의 모든 정보를 주고받았습니다.퀵랩 오류나 수료에 필요한 조건 등을 이야기했죠. 물론 저희 그룹원 모두 머신 러닝을 처음 접해보는 사람들이 대부분이었기에 누군가가 나서서 요약 같은 건 능력밖의 일이라, 다른 분들이 페이스북 그룹에 올려주신 자료들을 십분 활용했습니다. 스터디 잼을 통해 배운 점솔직히 말해 입문반에서는 머신러닝 다운 머신러닝을 접한다는 느낌이 희미했습니다.퀵랩의 설명에 따라 그대로 따라가니 짜잔!! 하면서 결과만 보여주기만 해서 그랬던 거 같습니다. 그래서 중급반에 기대가 컸는데, 오히려 커진 건 수업량;;입문반과 달리 확실한 강의를 통해 수업을 하는 게 오히려 좋았습니다…만…영어로 봐서 그런지 코세라 강의가 생각 외로 어렵더군요. 난이도는 그룹원들도 다들 비슷한 생각이었습니다. 누구는 체질이 맞지 않는 거 같다라는 얘기도(ㅋㅋㅋㅋㅋ). 저는 누군가가 물어볼 지 모르니, 그룹장으로서 이해는 해야지! 라는 생각에 결국 3번씩이나 보게 되는 참사가… 그래도 수업의 난이도가 어렵다는 것을 인지하고 계시는지 문제는 대체로 쉬운 편이었습니다. 이게 맞나…?? 하면서 푸니깐 그냥 다 통과더군요. 머신 러닝… 아직 딥 러닝도 아닌데 꽤나 배울 것이 많다는 것을 통감했습니다.특히 수학… 문과인 저는 공식을 검색해가며 공부했습니다. 수학이 정말 중요한 분야더군요.새삼 학교 프로젝트 때 CNN을 활용한 딥러닝을 하신 분이 대단할 따름… 이러니 저러니 해도, 어디가서 AI 공부해봤다고 이야기는 할 수 있겠네요. 다른 AI 얘기에 낄 수 있는 배경 지식을 배우기에는 좋았습니다. 중급반 코세라 수료증! 언젠가 AI가 엑셀처럼 쉽고 간편하게 활용되는 그날까지 서로 힘내봅시다! 마지막으로 참고에 도움이 된 자료들과, 단톡방 사진들을 올리며 마치겠습니다! 도움이 된 자료들 및 관련 링크 클라우드 잼 심화반(5/13 마감) 2019구글ML스터디잼 수료 확인 및 신청 방법 코세라 Launching into ML 한글 자막(원드라이브) 머신러닝 용어 모음집 인공지능 박람회 구글 스터디 잼 머신러닝(중급반) 가이드라인 머신 러닝과 딥 러닝 BASIC 단톡방 사진 갤러리","categories":[{"name":"머신러닝","slug":"머신러닝","permalink":"https://caesiumy.github.io/categories/머신러닝/"},{"name":"스터디잼","slug":"머신러닝/스터디잼","permalink":"https://caesiumy.github.io/categories/머신러닝/스터디잼/"}],"tags":[{"name":"머신러닝","slug":"머신러닝","permalink":"https://caesiumy.github.io/tags/머신러닝/"},{"name":"구글","slug":"구글","permalink":"https://caesiumy.github.io/tags/구글/"},{"name":"스터디잼","slug":"스터디잼","permalink":"https://caesiumy.github.io/tags/스터디잼/"}]},{"title":"간단하게 알아보는 프론트엔드와 백엔드의 특징","slug":"frontend-and-backend-features","date":"2019-04-14T14:50:25.000Z","updated":"2019-05-01T14:59:15.921Z","comments":true,"path":"2019/04/14/frontend-and-backend-features/","link":"","permalink":"https://caesiumy.github.io/2019/04/14/frontend-and-backend-features/","excerpt":"프론트엔드? 백엔드? 그게 뭐죠??나는 어디가 어울릴까?","text":"프론트(Front)? 백(Back)? Front / Back 앞과 뒤를 뜻하는 의미라는 것은 모두가 알고 있을 상식이다. 그리고 그 말대로, 프로그래밍에서도 프론트와 백을 앞단과 뒷단이라고 하기도 한다. 구체적으로 말하자면, 프론트엔드는 프로그램의 앞, 즉 모습을 프로그래밍하는 것이고, 백엔드는 프로그램의 뒤, 다시 말해 알고리즘 같은 것들을 프로그래밍하는 것이다. 이제 아래에서 프론트엔드와 백엔드의 장단점을 간단히 알아보자! 프론트엔드웹개발의 측면에서 말하자면, 누구나 처음은 프론트엔드로 시작했을 것이다.간단한 html, css, js 정도는 입문자들의 빼놓을 수 없는 필수코스! 그럼 프론트엔드가 무엇인지 간단히 말하자면…네이버를 예시로 들어보자. 맨 위의 네이버 로고는 무슨 모양으로 할지 검색창은 어디에 둘지 로그인은 모달을 띄울지 말지 더보기 버튼을 누르면 어떤 액션을 취할지 뉴스 링크를 누르면 어떤 페이지로 이동할지 실시간 검색어로 커서를 옮기면 자동 확대할지 등등 유저가 접근하는 곳에서의 일을 담당한다고 생각하면 된다.쉽게 말해 입문자가 생각하는 웹개발은 그냥 프론트엔드의 일이다. 이쯤에서 프론트엔드의 장단점을 살펴보자 프론트엔드의 장점 시각적 피드백을 바로바로 받을 수 있다. 유저와의 연결성이 높다. 뭔가 만들어낸다는 느낌을 강하게 받을 수 있다. 1. 시각적 피드백을 바로 받을 수 있다.사실상 프론트엔드의 최대 강점이자, 그 자체이다.내가 만들어낸 것을 바로 볼 수가 있는 것.그것만으로도 프로그래머에게 큰 동기부여가 된다는 것은 백엔드를 개발해보면 알 것이다… 2. 유저와의 연결성이 높다.시각적 피드백을 받는다는 것은 자기 자신으로부터뿐만 아니라, 유저에게서도 받는다는 것을 의미한다. 좋은 의미로든 나쁜 의미로든 그렇기에 개발하고 나서도 야! 내가 만든 사이트 좀 봐봐! 라고 자랑할 수 있는 자랑거리가 생기는 셈이기도 하다. 3. 만들어낸다는 느낌을 받는다.역시나 시각적이라는 단어를 빼놓을 수가 없다.멋스럽게 만들고, 친구들에게 자랑한다는 생각만으로도 개발자는 열정의 불꽃을 피우게 될 것이다. 프론트엔드의 단점위와 같은 시각적인 장점에도 불구하고, 단점또한 뚜렷하다. 선택의 폭이 좁다. 피로도가 높다. 업데이트가 빠르다. 개발자로부터 인정을 받기 힘들다. 1. 선택의 폭이 좁다.프론트엔드 개발자에게는 숙명이 있다.그것은 바로 html, css, js.세 가지 중 단 하나라도 꺼려진다면 프론트엔드는 아웃… css란 이런 것 2. 피로도가 높다.물론 모든 개발자는 피로도가 맥스치를 가볍게 넘는 것은 자명한 사실이지만프론트엔드는 그 중 조금 더 라고 생각하면 된다. 개발과 디자인이 결합된 부분도 있고,백엔드에 비해 배워야 할 지식들이 많다. html css js로 끝이라고 생각하면 오산!ajax부터 bootstrap, npm, webpack 등등…필수 아닌 필수는 많다. 3. 업데이트가 빠르다. 빠르면 좋지 않아?? 는 유저 입장의 생각.프로그래머는 공부할 것이 늘어난다고 생각해야한다. 따라서 위에서 언급한 많은 양의 필요한 프로그래밍툴 모두 업데이트를 따라가야 한다.업데이트가 느리면 괜찮을 수도 있겠지만, 프론트엔드 시장은 그리 호락호락하지 않다.매일매일 뒤바뀌는 놀이터이기 때문에, 끊임없이 공부를 해야한다.마치 비트코인 같달까 js는 물 속에서 코딩해야 한다. 그래야 아무도 우는 것을 보지 못할테니... 4. 개발자로부터 인정을 받지 못한다.이거는 좀 케바케이긴 하지만, 사실 좋은 프론트엔드 개발자가 부족해서 나타나는 현상이기도 하다. 전공을 배운 개발자들은 대체로 백엔드를 담당하므로,프론트엔드는 비전공자, 디자이너 출신 개발자나 하는 영역이라고 생각하기 일쑤이다. 이 글을 보고 계시는 여러분도 십중팔구 맨 위에서 시각적이다, 앞모습을 만든다 이런 소리를 듣고선 프론트엔드가 쉬워보이니 하고 싶다고 생각한 사람이 있을 것이다. 분명. 항목과 별개로 이건 맞는 말이다. 백엔드전공자들은 웹개발 전에 데이터베이스를 위한 SQL, 알고리즘 공부를 위한 각자의 언어쯤은 하나씩 특기로 가지고 있을 것이다.지금까지는 콘솔에서 인풋 아웃풋을 넣었겠지만, 이제는 그 결과를 웹으로 방출할 시간이다! 프론트엔드가 웹의 앞모습이라면, 백엔드는 뒤에서 묵묵히 일하는 다크나이트 이다.앞서 말한 프론트가 화장한 얼굴이라면, 백은 안면 골격 정도…?? (맞는 표현인가 이거)위에서처럼 예시로 다뤄보자면 어떻게 하면 검색 속도를 향상시킬지 목록 정렬 기준은 어떻게 할지 이미지 데이터들은 어디서 불러올지 사이트의 보안은 어떻게 구축할지 모바일 데이터는 어떻게 절약할지 등등 유저라면 전혀 생각하지 않는 요소들을 위해 일한다… 백엔드의 장점 대부분이 이미 배운 것이다. (전공자의 경우) 개발환경이 안정적이다. 1. 전공자의 경우 이미 배운 것이다.물론 공부 환경에 따라 다르겠지만, 그래도 전공자가 유리한 것은 사실이다.어느 학교든 데이터베이스랑 언어쯤은 배우지 않는가? 그거면 된다. 데이터베이스를 맡은 백엔드면 SQL을 잘하면 되는 것이고그외라면 자신이 맡은 언어로 잘 헤쳐나가면 된다. 예를 들어, 현재 멋사 커리큘럼인 django 같은 경우는 python 기반이기 때문에 전공자라면 웬만해서는 경험해봤을 언어이다. 하다못해 들어보기라도 했을테고, 혹여 알지 못하더라도 다른 언어를 접해본 경험이 있으면 공부 없이 사용할 수 있을 정도로 쉽다. 따로 자바의 스프링 등 전공자라면 다 해봤음직한 언어들을 활용하는 곳이 백엔드이다. 프론트도 중요하지만 그걸 떠받치는 백도 중요하다. 2. 개발환경이 안정적이다.빠르게 발전하는 프론트에 비해 백이 가진 큰 장점이다.프론트를 몇 년 쉬었다가 다시 시작한다면?? 꽤 배울 것이 많을 것이다.그러나 백을 몇 년 쉬었다가 다시 시작한다면?? 언어 자체는 크게 변하지 않았기에 공부할 것도 별로 없을 것이다. 그리고 한 가지 언어를 알고 있으면 다른 언어로 넘어가는 것도 쉽기에, 더욱 안정적이다. 덧붙여서 프론트엔드도 이런 툴들이 나오면서 입지가 좁아지고 있다… 백엔드의 단점장점이 있으면 단점이 있는 법. 개발환경이 안정적이라서 철밥통으로 느껴지신다구요? 천만의 말씀! 알고리즘이 필수 시각적 피드백 전무 1. 알고리즘이 필수컴퓨터공학의 꽃, 알고리즘… 정렬부터 시작해서… 으윽 머리가…!! 이번에 친구가 보여준 알고리즘 시험 문제 프론트엔드가 html, css, js 가 필수였다면백엔드는 알고리즘이 필수이다. 그러니 모두들 어서 백준을 공략하자구!! 2. 시각적 피드백 전무프론트엔드가 가진 큰 강점인 시각적 피드백은 동기부여와 직결되는 문제이다.백엔드에서 아무리 데이터베이스를 잘 짜고, 정렬의 속도를 높여봤자 유저는 알지 못한다… 친구가 와서 네 웹사이트 디자인 멋지던데? 라고는 할 수 있어도 네 웹사이트 데이터베이스 구조 굉장하던데??이야 그렇게 빠른 검색 알고리즘은 처음이야! 라는 피드백을 받는 건… 친구가 개발자여도 힘들 것이다. 정답은 없다.사실 어느 분야나 직업이나 장점이 있고 단점이 있다.또한 그렇기에 모든 선택의 책임은 자기 자신에게 달려있는 것. 첨언하자면 필자는 현재는 프론트엔드를 지향하지만, 역시 백엔드도 함께 공부하여 풀스택 엔지니어를 꿈꾸고 있다.프론트라고 해서 백을 모르면 안 되고, 백이라고 해서 프론트를 모르면 안 되는 세상이기 때문이다.결국 시작이 다른 것뿐이지, 결승선은 같아야 한다는 뜻. 매일 프로그래밍 설문조사 &lt;프론트엔드도 알고리즘과 자료구조를 알아야 하는가?&gt; 결과 네 (82%) 아니오 (18%) 다만, 내가 피피티 좀 잘 만든다, 1픽셀이라도 어긋난 것은 참을 수 없다 이런 생각을 가지고 있으면 먼저 프론트엔드로 오기 바란다. 왜냐하면 내가 그랬으니까! 언제나 그렇지만 피드백 환영합니다!! Related Posts 노마드 코더의 프론트엔드 vs 백엔드 신입 프론트엔드는 무엇을 공부해야 하나요 프론트엔드 체크리스트 백준 매일 프로그래밍 웹개발자 로드맵","categories":[],"tags":[]},{"title":"Git을 vscode를 통해 간편하게 사용해보자!","slug":"vscode-how-to-git","date":"2019-04-07T07:39:49.000Z","updated":"2019-04-07T10:19:53.698Z","comments":true,"path":"2019/04/07/vscode-how-to-git/","link":"","permalink":"https://caesiumy.github.io/2019/04/07/vscode-how-to-git/","excerpt":"입문자가 git을 CLI로 사용하는 것은 어렵다. 명령어니 뭐니…그러니 vscode를 통해 쉽고 간편하게 익혀보자!","text":"(codeburst.io/git-and-github-in-a-nutshell-b0a3cc06458f) git이란 무엇인가아마 개발자들이라고 하면 git 에 대해 모르는 사람이 없을 것이지만,입문자들은 금시초문인 것이 당연하다. 그런데 이 git을 관리해주는 Github 가 마이크로소프트에 한화 약 8조원에 인수되었다고 한다면, git이 개발자들에게 있어서 어떤 의미인지 빠르게 짐작할 수 있을 것이라고 생각한다. 넥슨의 예상 매각 가격이 약 10~13조원이라고 하는데, 겨우 인터넷 서비스가 8조원…?? 이러한 git은 이곳에 포스팅하기에도 벅찬, 매우 많은 기능을 제공해준다. 페르마의 마지막 정리버전 관리, 백업, 정적 페이지 호스팅 등등…실제로 많은 IT회사에서도 서류에 자신의 github 주소를 담으라고 하기도 한다.이렇듯이 앞으로 개발 업계에 몸을 담으려면 빼놓을 수 없는 서비스일 것이다. 그래서 어떻게 쓰죠??(dev.to/neshaz/git-commands-ultimate-tutorial-part-2-7ko) git 을 쓰는 방법은 여러가지가 있다. 위의 사진처럼 CLI에 명령어를 입력해서 해도 되고, git desktop 같은 유틸을 사용해도 되고, 앞으로 설명하려는 vscode 같은 에디터에 탑재된 기능을 사용해도 된다. CLI란 Command Line Interface의 약자로, 보통 해커하면 생각나는 검은 화면에 하얀 글씨를 떠올리면 편하다. CLI로 git을 사용하는 방법은 여기에서 참고해보자! 필자도 여기에서 기본적인 명령어들을 익혔다. git을 사용하려면 Github아이디가 필요하다. 어서 가서 가입하자! vscode를 통해 git 사용해보기 소스 제어자를 설정하자필자의 블로그가 보이는 탐색기이다. 탐색기는 제쳐두고, 왼쪽에 메뉴바에 주목해주시길 바란다.위에서 3번째가 바로 git을 관리해주는, 소스 제어라는 항목이다.한 번 들어가보자. 아무것도 안 하면 이렇게 뜬다. 정말 아무것도 세팅하지 않았을 시에 이렇게 뜰 것이다.자 이게 소스 제어자를 git으로 바꾸어줄 시간이다. 지웠으니 괜찮겠지?? ctrl + shift + ` 를 함께 누르거나, 위 메뉴에서 터미널을 선택해 새 터미널을 눌러보자. 사진과 같은 터미널이 뜰 것이다. 이곳에서 cd 명령어를 통해 원하는 디렉토리에 들어가면 되지만,어차피 대부분 작업환경에서 vscode를 실행하였을 것이기 때문에 그냥 바로 시작해도 된다. 그럼 바로 시작해보자git init을 터미널에 입력하고 엔터를 쳐보자. 시작할 때는 git init을 입력하자.init은 initialize, ‘시작하다, 초기 내용을 설정하다’라는 의미이다. 이번엔 모자이크 그럼 소스 제어: GIT 이라는 표시와 함께,변동이 있는 파일들이 주르륵 나타날 것이다. git과 github를 연동해주자계정 연동여기서 또 커맨드로 해주어야 할 것이 있다.바로 git과 github를 연동해주는 것! 그래야 github에서 나를 인식하기 때문이다. 12git config --global user.name &apos;유저 이름&apos;git config --global user.email &apos;유저 이메일&apos; github 가입시 적어냈던 유저 이름과 이메일을 적어주면 된다. git init 과 달리 한 번만 적어주면 된다. 레포지토리 연동뭐가 많지만 일단 아래를 따라하자 방금 만들어진 레포지토리로 들어가면, 사진처럼 바로 위에 https://github.com/유저 이름/레포지토리 이름.git 형식으로 된 링크가 뜰 것이다. 얼른 복사하자. 참고로 위 사진의 명령어들은 cli를 사용할 때 쓰는 것들이다.우리는 vscode를 이용할 것이므로 패스. 그럼 터미널에 1git remote add origin &apos;복사한 레포지토리 주소 붙여넣기&apos; 를 입력하여 현재 작업 영역과 레포지토리를 연동해주자. 입력한 주소를 확인 하는 명령어는 git remote -v잘못 입력했을 경우에는 git remote remove origin으로 삭제하고 다시 설정해주자 전 저런 창이 안 떠요오픈 소스니깐 공개! 아마 레포지토리 생성 시 Readme.md 생성을 체크해서 그랬을 것이다.걱정할 필요 없다. 일단 그렇게 레포지토리를 만들었으면, 위와 같은 모습일 것이다.사진처럼 clone or download 를 클릭해서 나오는 링크를 복사하자. 레포지토리의 git 링크이다. 아까 터미널로 돌아와서, 1git clone &apos;복사한 레포지토리 주소&apos; 를 입력하면 레포지토리 이름으로 된 폴더가 생길 것이다.그곳에서 작업하면 된다. 이렇게 작업할 시에는 위의 git init 부분은 생락해도 된다.왜냐하면 clone할 시 init도 같이 해주기 때문.그래서 필자는 이 방법을 주로 쓴다 만약 vscode 터미널이 아닌 git bash로 했다면 붙여넣기 명령어는 shift + insert 자 이제 터미널로 할 일은 끝났다. 어려운 일은 이제 끝이라고 생각하면 된다!! git add와 commit35는 변동된 파일의 숫자 이 사진을 다시 보자.메시지 (커밋하려면 Ctrl + Enter 누르기) 가 보일 것이다. 이곳에 github에 올리는 메시지를 적고, (test, docs, fix 등 간단 설명)우측 상단에 체크 표시를 누르고 확인을 하면 add와 commit 모두 동시에 되는 것이다!! 소스 제어 탭의 다른 기능은 다음과 같다. 변경 내용을 클릭시 어떻게 바뀌었는지 변동 내역 확인 가능 되돌리기를 통해 변동 이전으로 되돌리기 가능 원하는 파일만 스테이징(add) 가능 모든 파일 스테이징 가능 기타 등등 git push를 통해 github에 올려보자master옆의 아이콘은 다를 수도 있다. 자 이제 마지막 스텝만 남았다.vscode 좌측 하단을 보면 다음과 같은 바가 보일 것이다. master는 현재 master 브랜치에 있다는 뜻이고,(관리자라고 생각하면 편하다.)그 옆에 있는 아이콘을 클릭하면 된다. 척 봐도 동기화라고 쓰여있는 듯한 아이콘일 수도 있고,처음이면 클라우드에 업로드하는 모양일 수도 있다. 위 사진은 4개 변동사항을 내려받고, 26개의 변동사항을 올려야 한다는 뜻이다.내려받을 변동사항이 있으면 바로바로 받자. 안 받고 하면 충돌이 일어날 수도… 이미 만들어진 레포지토리를 가져오고 싶어요.다른 로컬 환경에서(다른 컴퓨터나) git을 이어서 하고 싶을 때! 1git clone &apos;레포지토리 주소` 를 명령어로 입력해보자. 뭔가 주르륵 뜨면서 자동으로 다운로드 될 것이다. 이 명령어로 다운받았을 시, 위의 레포지토리 연동 부분은 건너뛰어도 된다! 와 세상 편안!그러니 오류 났을 시 그냥 clone으로 처음부터 다시 처리하자 일단 생각나는대로 git에 대한 간단 사용법을 적어보았다. 부족한 부분이 있으면 피드백을!! 같이보면 좋은 포스트 깃허브로 취업하기 깃허브로 협업하기 멋사 성균관대 박성우 분께서 제작하신 git 가이드라인 생활코딩 지옥에서 온 Git(구) 생활코딩 Git4 cli로 협업 생활코딩 Git 소스트리 협업 포스트 쓰려니 너무 많아져서 생략…","categories":[{"name":"멋쟁이 사자처럼","slug":"멋쟁이-사자처럼","permalink":"https://caesiumy.github.io/categories/멋쟁이-사자처럼/"},{"name":"개발환경","slug":"멋쟁이-사자처럼/개발환경","permalink":"https://caesiumy.github.io/categories/멋쟁이-사자처럼/개발환경/"},{"name":"git","slug":"멋쟁이-사자처럼/개발환경/git","permalink":"https://caesiumy.github.io/categories/멋쟁이-사자처럼/개발환경/git/"}],"tags":[{"name":"멋쟁이 사자처럼","slug":"멋쟁이-사자처럼","permalink":"https://caesiumy.github.io/tags/멋쟁이-사자처럼/"},{"name":"개발환경","slug":"개발환경","permalink":"https://caesiumy.github.io/tags/개발환경/"},{"name":"vscode","slug":"vscode","permalink":"https://caesiumy.github.io/tags/vscode/"},{"name":"git","slug":"git","permalink":"https://caesiumy.github.io/tags/git/"}]},{"title":"vscode 추천 익스텐션(Extensions)과 세팅","slug":"vscode-recommended-extensions","date":"2019-04-02T14:46:33.000Z","updated":"2019-04-05T15:45:14.509Z","comments":true,"path":"2019/04/02/vscode-recommended-extensions/","link":"","permalink":"https://caesiumy.github.io/2019/04/02/vscode-recommended-extensions/","excerpt":"vscode 확장 프로그램들을 설치하고 세팅하여, 활용을 극대화해보자!","text":"우리는 앞서 올린 게시글에서 개발환경을 설정하는 법을 배웠지만 그 개발 환경을 바로 쓰기에는 아직 이르다.개발자는 게을러지기 위해 부지런해지는 법. 어서 쉽고 편한 확장 프로그램을 설치하러 떠나보자!! 필자가 설치한 A-Z 순서대로 서술할 것이다. Auto closing tagauto closing tag 오토 클로징 태그라고, 태그를 입력시 자동으로 닫는 태그를 생성해준다. 나중에 emmet 에 익숙해지면 잘 안 쓰이겠지만, 그래도 없으면 불편함이 체감되는 확장 프로그램. alt + . 을 함께 입력해보자.닫는 태그가 빠진 곳을 수동으로 채워주는 단축키이다. Auto Rename tagauto rename tag 위의 확장 프로그램과 비슷한 역할이지만, 더 좋다고(?) 할 수 있는 확장 프로그램이다. 원래 여는 태그의 이름을 바꾸면 닫는 태그의 이름도 함께 바꿔주어야 하는 수고로움이 수반되지만,이 확장 프로그램과 함께라면 그런 건 없다.여는 태그의 이름이 바뀌면 닫는 태그의 이름도 함께 바꾸어준다. 어메이징!! Bracket Pair ColorizerBracket Pair Colorizer ((((())))) ??? 수학에서 괄호가 엄청 많이 있어서 당황한 적이 있을 것이다. 도대체 어디서부터가 어디까지인지… 허나 이 익스텐션은 짝이 되는 괄호끼리 색을 칠해, 가독성을 높였다!알록달록한 괄호들을 보는 맛도 있다 츄릅 Debugger for ChromeDebugger for Chrome 크롬 디버거를 vscode로 가져오는 익스텐션이다. 필자는 설치만 하고 사용할 일이 없었는데,말하자면 길어지니, 필요하면 여기에서 사용방법을 익혀보자. Git HistoryGit History 나중에 멋사에서 배우게 될 git을 좀 더 편하게 사용하게 해주는 익스텐션이다.현재 작업환경에서 어떤 깃 활동을 했는지 자세히 보여주는 역할을 해준다. ctrl + shift + p 또는 f1 을 눌러 사용자 팔레트를 연다. git log 를 입력한다. Git: View History 항목을 선택한 뒤 엔터! Hightlight Matching TagHighlight Matching Tag 앞서 설명한 괄호에 색 입혀서 구분하게 하는 기능을 태그로 비슷하게 가져왔다고 생각하면 된다. 자세히 말하자면, 현재 내가 선택한 태그의 여는 태그 혹은 닫는 태그가 어디있는지 표시(하이라이트)해주는 기능이라는 것이다. 더 궁금하다면 언제나 그렇듯이 확장 프로그램 설명란을 참조할 것!! 확장 프로그램을 소개하는 이런 페이지 말이다. IntelliSense for CSS, SCSS class names in HTML, Slim and SCSSIntelliSense for CSS, SCSS class names in HTML, Slim and SCSS html이 바늘이라면, css는 실!그 실을 바늘에 자동으로 꿰어주는 없어서는 안 될 익스텐션이다. 간단하게 말하자면, css를 자동완성하도록 도와준다. HTML CSS SupportHTML CSS Support 위에서 언급한 인텔리센스와 이 서포트는 그냥 같은 역할이다.위 익스텐션이 먹통이면 이걸 사용하는 정도…?? 자동완성이 안 된다면 ctrl + space를 눌러보자.어디서나 공통인 자동완성 단축키이다. JinjaJinja 이 익스텐션은 ‘진짜’다… django로 개발하다보면, 필수적으로 템플릿 태그를 사용하게 된다.그러나 이 템플릿 태그가 모두 같은 색이라면 구분하기 힘들 것이 안 봐도 비디오. 그렇다. 바로 그 템플릿 태그에 색을 씌워주는 확장 프로그램이다. 없어도 될 거 같은데?? 하지 말고 일단 설치하자. Korean Language Pack for Visual Studio CodeKorean Language Pack for Visual Studio Code 한국인은 역시 한글을 써야한다.영문과인 필자도 정말정말 애용하는 익스텐션. vscode의 대부분을 한글로 사용할 수 있게 해주는 언어팩. Live ServerLive Server 자신이 만들고 있는 페이지를 열어주고, 라이브로 갱신시켜 보여주는 익스텐션. django 개발 중에는 쓸 일이 드물겠지만, 그래도 html 과 css 만을 사용한 페이지를 만들 때는 유용하다. Live ShareLive Share 운영진들이 앞으로 쓸 일이 많아질 거 같은 익스텐션 1위…물론 협업에 사용해도 매우 좋은 확장프로그램이다. 실시간으로 코드를 공유하여 프로그래밍을 돕는 방식이기에 디버깅, 협업 어디에도 어울린다.AWS에 있는 Cloud9이나, 국내 서비스인 구름IDE와 비슷하다고 생각하면 되겠다. 사용 방법도 간단하다. 왼쪽 메뉴에 생기는 Live Share 메뉴를 클릭하고, 서버를 만든 뒤, 서버 링크를 복사하여 팀원을 초대하면 끝! Markdown All in OneMarkdown All in One 마크다운 문법을 편하게 사용하도록 단축키를 추가해주는 확장 프로그램이다. 마크다운이 뭐냐구요…??나중에 깃허브에 올릴 readme 또는 현재 필자가 쓰는 블로그 등에 쓰이는 문법.어차피 언젠가는 익혀야하기 때문에 미리 설치해둡시다. Material ThemeMaterial Theme 기존의 vscode 테마를 탈피한 다른 테마를 설치할 수 있도록 하는 확장프로그램.사용 방법은 위에 보이는 색 테마 설정 버튼 또는 사용자 팔레트를 열어서 theme 이라고 입력한 다음 테마를 바꾸어보자. 사용자 팔레트는 f1 또는 ctrl + shift + p 로 연다. Path IntellisensePath Intellisense 모두들 언젠가 로컬에 있는 파일을 참조해야 할 경우가 생길 것이다.바로 그때 로컬 파일을 빠르게, 정확하게 참조할 수 있도록 자동완성을 해주는 기능. npm Instellisensenpm Intellisense 자매품이다. 위 확장 프로그램과 함께 설치하자. Power ModePower Mode 아는 사람만 알고, 쓰는 사람만 쓴다는 바로 그 모드.코딩하는 손 맛이 생긴다고 하는데, 필자는 안 쓰는 쪽이다. 백문이 불여일견이다.확장 프로그램 상세페이지를 통해 예시를 보고, 그 예사롭지 않음에 놀라보자. PrettierPrettier 쓰는 이 모두가 감탄을 금치 못하는 바로 그 모드2.뒤죽박죽이던 코드를 치우는 모습은 그야말로 도라에몽이 에디터 안으로 강림한 듯한 편안함. 이것도 쓰는 사람만 쓰고, 안 쓰는 사람은 안 쓴다고 한다. 필자는 쓰는 쪽. django 에 쓰이는 템플릿 태그에서 가끔 오류가 생기곤 하는데,그럴 땐 vscode 를 잠시 껏다가 켜보자. 뭐든지 오류가 생기면 껏다 켜거나, 새로 시작해보자. 사용방법은 사용자 팔레트를 연 뒤, Format Document를 찾아 선택하면 완료! 헌데… 이 방법은 조금 번거롭다.그래서 준비했다! 매 저장(ctrl + s)시마다 바로바로 코드가 정리될 수 있도록 말이다. prettier 를 설치한다 vscode 설정에 들어간다. 사용자 설정은 모든 곳에 적용되는 곳이고, 작업 영역 설정은 지금 바로 이 작업 환경(디렉토리)에서만 적용되는 설정이다. 취향껏 고르자. 검색창에 format on save 를 입력해보자. 저장할 때마다 서식을 지정한다는 뜻이다. 위 그림과 같이 체크한다. 잘 되었나 확인해보고 싶으면 뒤죽박죽인 자신의 코드에서 ctrl + s로 저장해보자. 아니면 설정 검색창에서 setting.json 를 검색하고, 편집 버튼을 눌러 살펴보자. settings.json에서 editor.formatOnSave가 true 값인지 확인해봐도 된다. PythonPython django의 기반이 되는 언어는 python 이다.묻지도 따지지도 말고 그냥 설치하자. Settings SyncSetting Sync 이렇게 많은 확장 프로그램을 데스크탑에 설치해놓았는데,아니! 노트북에도 일일히 해야 한다구!? 라는 걱정을 덜어주는 확장 프로그램. 깃허브의 gist를 활용하여, 현재 에디터 설정을 업로드 / 다운로드를 가능케 하는 신비로운 물건. 대신 초기 설정이 너무 복잡하기 때문에 이곳에서 설명하는 것은 불가능하고,확장 프로그램의 ‘세부 정보’ 에 가면 친절히 잘 설명되어 있으니 그곳을 참조하자. vscode iconsvscode icons 왼쪽 메뉴바를 보시라. 너무 단조로워서 파일 찾기가 힘들지는 않은가??그런 당신을 위한 확장 프로그램!! vscode icon !! 이름처럼 vscode의 단조로운 파일 아이콘을 보기 쉽게 바꾸어주는 확장 프로그램이다. 예시는 세부정보를 보시고 사용 방법은 이미지에 나온 것처럼 파일 아이콘 테마 설정또는 사용자 팔레트를 통해 vscode icons를 검색하여 활성화하면 된다. vscode-styled-componentsvscode-styled-components 이것도 맨 위에서 설명했던 코드 강조와 비슷하다.그저 스타일이라는 말이 붙었기에, 스타일을 표현하는 코드들에 색을 입혀주는 확장 프로그램. 기타 팁 settings.json에서 빨간색의 밑줄이 그어진다면, 윗줄 마지막에 콤마 , 를 제대로 넣어뒀는지 확인해보자. 설정에 들어가서 mouse wheel zoom 을 검색하고 나온 결과에 체크해보자. ctrl + 마우스 휠 로 에디터의 글자 크기를 조절할 수가 있다. 나머지 쓰면 좋은 익스텐션 Color Highlight Comment Anchors GitLens TODO Highlight django","categories":[{"name":"멋쟁이 사자처럼","slug":"멋쟁이-사자처럼","permalink":"https://caesiumy.github.io/categories/멋쟁이-사자처럼/"},{"name":"개발환경","slug":"멋쟁이-사자처럼/개발환경","permalink":"https://caesiumy.github.io/categories/멋쟁이-사자처럼/개발환경/"},{"name":"vscode","slug":"멋쟁이-사자처럼/개발환경/vscode","permalink":"https://caesiumy.github.io/categories/멋쟁이-사자처럼/개발환경/vscode/"}],"tags":[{"name":"멋쟁이 사자처럼","slug":"멋쟁이-사자처럼","permalink":"https://caesiumy.github.io/tags/멋쟁이-사자처럼/"},{"name":"개발환경","slug":"개발환경","permalink":"https://caesiumy.github.io/tags/개발환경/"},{"name":"vscode","slug":"vscode","permalink":"https://caesiumy.github.io/tags/vscode/"}]},{"title":"윈도우에서 django 개발환경 설치하기(vscode, git, python)","slug":"settings-before-start","date":"2019-03-31T08:45:31.000Z","updated":"2019-04-07T08:18:12.056Z","comments":true,"path":"2019/03/31/settings-before-start/","link":"","permalink":"https://caesiumy.github.io/2019/03/31/settings-before-start/","excerpt":"멋쟁이 사자처럼 7기django 개발을 위한 vscod, git, python을 설치해보자!","text":"멋쟁이 사자처럼 7기 커리큘럼이 django(어무해)로 바뀜과 동시에, 다루는 IDE 등 개발 환경 또한 바뀌게 되었다. 이번에 설치할 목록은 다음과 같다. Visual Studio Code git python django vscode 설치하기vscode 로고 vscode 설치 링크 에 들어가서 윈도우OS 전용으로 다운 받은 뒤, 파일을 실행하면 빠른 설치가 가능하다.언제나 많은 분들이 그러하듯이 계속 다음 다음만 쭈욱 눌러주면 된다. …면 좋겠으나, 막 누르지는 말고 아래 사진이 나오면 스탑!! 체크 버튼이 나오는 항목까지만 진행하자 바탕 화면 바로가기는 취향껏 체크해주고, 나머지는 모두 체크해주자. 그래야 마우스 컨텍스트 메뉴에서 빠르게 vscode 를 실행할 수 있다. 마우스 컨텍스트 메뉴란 마우스 우클릭 시 나오는 여러 메뉴들을 가리킴. 그 이후는 설치 버튼을 누르고 기다리기만 하면 미션 1 컴플리트! Git 설치하기git 로고 git 설치 링크 로 들어가서, 우측에 있는 최신 버전 다운로드를 누르면 자동으로 설치파일이 다운로드된다. vscode 와 똑같이, 계속 다음만 눌러주다가 아래 이미지에서 잠깐!! 여기만 바꿔주면 만사 오케이 기존에는 vim으로 되어있을 것이지만, 우리는 앞으로 vscode를 사용할 것이기 때문에 그에 맞는 선택지를 골라주면 된다. 이 다음은 예상하시겠지만 쭉 다음만 눌러주면 설치가 완료된다. 컨텍스트 메뉴 확인하기이런 메뉴창이 나온다면 성공 Git GUI Here Git Bash Here Open with Code 바탕화면이나 어디 다른 디렉토리 내에서 마우스 우클릭을 해보자. 위 사진처럼 3가지 컨텍스트 메뉴가 뜨면 vscode 및 git 설치 성공이다. 라데온은 무시하자 실험 삼아 git bash 를 띄워 git 을 입력해보면 설치가 잘 된 것을 확인해볼 수 있을 것이다. 파이썬 설치하기파이썬 로고 이전과 같이 파이썬 설치 링크 로 들어가 가급적 최신 버전의 파이썬을 설치하자. 언제나 최신이 짱이다. 업데이트를 게을리하지 않는 개발자가 되자 우리 개발자들은 파이썬의 명성에 대해 익히 들어왔다. 커뮤니티가 크니, 못하는 게 없다느니… 그러므로 그런 자랑이야기는 스킵하고, 일단 써봐야 알 것 아닌가. 설치나 해보자. 출처: liquidweb.com/kb/how-to-install-python-on-windows/ 필자의 경우에는 이미 설치가 되어있어서… 다른 분 사진을 빌려왔다. 버전 상관 없이 처음 설치하시는 분들은 저런 창을 보게 될텐데, 아래 Add python to PATH 를 무조건 체크해야한다. 이미 겪어본 경험을 바탕으로 말하자면, 저 부분에서 체크를 까먹은 분들이 꽤 많다.덕분에 적지 않은 분들이 파이썬 설치 확인 커맨드 입력시 Command not found 같은 통보(?)를 접하게 되는 불상사가… 설치가 모두 완료 되었으면 파이썬 설치확인bash1python --version git bash를 켜서 다음의 명령어를 친 뒤 엔터를 눌러보자.현재 설치한 파이썬 버전이 나오면 올바르게 설치한 것이다. 안 나온다면 여기 에서 34를 자기 버전에 맞게 바꾸어주면 된다.(ex. 37) 복잡해보이니 그냥 처음부터 PATH에 체크하자… django 설치하기django 로고 django를 설치하기 위해서는 먼저 해야할 일이 있다. 바로 가상환경을 켜는 것.가상환경이 무엇인지는 다음에 시간이 나면 간단히 링크를 걸어줄 생각이다.일단 따라해보자. 순서는 다음과 같다. 개발할 작업 디렉토리를 생성한다. (새 폴더 만들기) 마우스 우클릭을 통해 git bash를 연다. or vscode를 열어 터미널을 사용한다.(후자는 추후 설명) python -m venv 가상환경 이름 을 입력하고 엔터! 가상환경이 켠다. django를 설치한다. 앞으로도 django 개발시 꼭 가상환경을 켜고 시작한다. 가상환경을 만들고, 실행해보자1python -m venv 가상환경 이름 같은 경우는 순서대로 이러한 뜻을 가지고 있다.python 명령을 내리겠다. / make 만들겠다. / virtual environment, 가상환경을 / 이름은 이렇게! 주로 하는 가상환경이름은 venv or myvenv 이다.필자는 myvenv 를 애용하니, 이걸 예시로 하자면python -m venv myvenv 가 되겠다!! 자 가상환경을 만들었으니 이제 켜봐야하지 않겠는가.source 가상환경이름/Scripts/activate 명령어를 치면 된다. 필자의 가상환경은 myvenv 라고 했으니 1source myvenv/Scripts/activate 명령어를 입력하면 되는 것이다. source 는 . 으로 대체가 가능하다.되도록 tab 키를 눌러 자동완성으로 해야 오타가 적을 것이다.예시를 기준으로 m 치고 탭! s치고 탭! a치고 탭! 가상환경을 끄는 방법은 위처럼 복잡하지 않게 1deactivate 만 입력하면 된다.아니면 그냥 껏다 키면 자동으로 꺼진다. 하하. 가상환경을 켰으니 django를 설치하자.가상환경을 켜면, 터미널에 (가상환경이름) 이렇게 뜰 것이다. 이러면 가상환경이 켜져 있는 것이다. 이제 여기에 1pip install django 만 입력하면 끝이다. django가 이렇게 쉽습니다. django 설치를 확인하고 싶으시다면, 가상환경을 켜신 다음 1pip list 이렇게 쳐보시면 django 가 리스트에 있을 것이다. 없으면… 설치 안 된 거죠 뭐. 여기까지 따라오셨다면, 모든 개발환경 세팅이 완료된 것입니다! 와우! pip를 업그레이드 해라 이런 텍스트가 뜰 때가 있는데, 그럼 나와있는 명령어를 그대로 입력하셔서 업그레이드하시면 됩니다! 끝내기 전에…앞으로 개발하실 때 꼭!! 가상환경 키고 시작하셔야 합니다!!","categories":[{"name":"멋쟁이 사자처럼","slug":"멋쟁이-사자처럼","permalink":"https://caesiumy.github.io/categories/멋쟁이-사자처럼/"},{"name":"개발환경","slug":"멋쟁이-사자처럼/개발환경","permalink":"https://caesiumy.github.io/categories/멋쟁이-사자처럼/개발환경/"},{"name":"vscode","slug":"멋쟁이-사자처럼/개발환경/vscode","permalink":"https://caesiumy.github.io/categories/멋쟁이-사자처럼/개발환경/vscode/"}],"tags":[{"name":"멋쟁이 사자처럼","slug":"멋쟁이-사자처럼","permalink":"https://caesiumy.github.io/tags/멋쟁이-사자처럼/"},{"name":"개발환경","slug":"개발환경","permalink":"https://caesiumy.github.io/tags/개발환경/"},{"name":"vscode","slug":"vscode","permalink":"https://caesiumy.github.io/tags/vscode/"},{"name":"python","slug":"python","permalink":"https://caesiumy.github.io/tags/python/"},{"name":"git","slug":"git","permalink":"https://caesiumy.github.io/tags/git/"}]}]}