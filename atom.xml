<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>문과생 코딩 개척기</title>
  
  <subtitle>풀스택 개발자가 되는 날까지</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://caesiumy.github.io/"/>
  <updated>2019-04-02T14:51:57.549Z</updated>
  <id>https://caesiumy.github.io/</id>
  
  <author>
    <name>Caesiumy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VSCODE 추천 부가기능(Extensions)과 세팅</title>
    <link href="https://caesiumy.github.io/2019/04/02/vscode-recommended-extensions/"/>
    <id>https://caesiumy.github.io/2019/04/02/vscode-recommended-extensions/</id>
    <published>2019-04-02T14:46:33.000Z</published>
    <updated>2019-04-02T14:51:57.549Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt -->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vscode 부가기능들을 설치하고 세팅하여, 활용을 극대화해보자!&lt;/p&gt;
    
    </summary>
    
      <category term="멋쟁이 사자처럼" scheme="https://caesiumy.github.io/categories/%EB%A9%8B%EC%9F%81%EC%9D%B4-%EC%82%AC%EC%9E%90%EC%B2%98%EB%9F%BC/"/>
    
      <category term="개발환경" scheme="https://caesiumy.github.io/categories/%EB%A9%8B%EC%9F%81%EC%9D%B4-%EC%82%AC%EC%9E%90%EC%B2%98%EB%9F%BC/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/"/>
    
      <category term="vscode" scheme="https://caesiumy.github.io/categories/%EB%A9%8B%EC%9F%81%EC%9D%B4-%EC%82%AC%EC%9E%90%EC%B2%98%EB%9F%BC/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/vscode/"/>
    
    
      <category term="멋쟁이 사자처럼" scheme="https://caesiumy.github.io/tags/%EB%A9%8B%EC%9F%81%EC%9D%B4-%EC%82%AC%EC%9E%90%EC%B2%98%EB%9F%BC/"/>
    
      <category term="개발환경" scheme="https://caesiumy.github.io/tags/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/"/>
    
      <category term="vscode" scheme="https://caesiumy.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>윈도우에서 django 개발환경 설치하기(vscode, git, python)</title>
    <link href="https://caesiumy.github.io/2019/03/31/settings-before-start/"/>
    <id>https://caesiumy.github.io/2019/03/31/settings-before-start/</id>
    <published>2019-03-31T08:45:31.000Z</published>
    <updated>2019-04-01T14:40:01.930Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><p>멋쟁이 사자처럼 7기 커리큘럼이 <code>django</code><del>(어무해)</del>로 바뀜과 동시에, 다루는 <code>IDE</code> 등 개발 환경 또한 바뀌게 되었다.</p><p>이번에 설치할 목록은 다음과 같다.</p><div class="alert info no-icon"><ol><li>Visual Studio Code</li><li>git</li><li>python</li><li>django</li></ol></div><p><br></p><h1 id="vscode-설치하기"><a href="#vscode-설치하기" class="headerlink" title="vscode 설치하기"></a>vscode 설치하기</h1><div class="figure center" style="width:;"><img class="fig-img" src="vscode3.png" alt="vscode 로고"><span class="caption">vscode 로고</span></div><p><strong><a href="https://code.visualstudio.com/" rel="external nofollow noopener noreferrer" target="_blank">vscode 설치 링크</a></strong> 에 들어가서 윈도우OS 전용으로 다운 받은 뒤, 파일을 실행하면 빠른 설치가 가능하다.<br>언제나 많은 분들이 그러하듯이 계속 다음 다음만 쭈욱 눌러주면 된다.</p><p>…면 좋겠으나, 막 누르지는 말고 아래 사진이 나오면 <strong>스탑!!</strong></p><p><br></p><div class="figure center" style="width:;"><a class="fancybox" href="vscode_install.png" title="체크 버튼이 나오는 항목까지만 진행하자" data-caption="체크 버튼이 나오는 항목까지만 진행하자" data-fancybox="default"><img class="fig-img" src="vscode_install.png" alt="체크 버튼이 나오는 항목까지만 진행하자"></a><span class="caption">체크 버튼이 나오는 항목까지만 진행하자</span></div><p>바탕 화면 바로가기는 취향껏 체크해주고, 나머지는 모두 <strong>체크</strong>해주자. 그래야 마우스 컨텍스트 메뉴에서 빠르게 <code>vscode</code> 를 실행할 수 있다.</p><blockquote><p><a href="https://ko.wikipedia.org/wiki/%EC%BD%98%ED%85%8D%EC%8A%A4%ED%8A%B8_%EB%A9%94%EB%89%B4" rel="external nofollow noopener noreferrer" target="_blank">마우스 컨텍스트 메뉴</a>란 마우스 우클릭 시 나오는 여러 메뉴들을 가리킴.</p></blockquote><p>그 이후는 설치 버튼을 누르고 기다리기만 하면 <strong><em>미션 1 컴플리트!</em></strong></p><h1 id="Git-설치하기"><a href="#Git-설치하기" class="headerlink" title="Git 설치하기"></a>Git 설치하기</h1><div class="figure center" style="width:;"><img class="fig-img" src="git1.png" alt="git 로고"><span class="caption">git 로고</span></div><p><strong><a href="https://git-scm.com/" rel="external nofollow noopener noreferrer" target="_blank">git 설치 링크</a></strong> 로 들어가서, 우측에 있는 최신 버전 다운로드를 누르면 자동으로 설치파일이 다운로드된다.</p><p><code>vscode</code> 와 똑같이, 계속 다음만 눌러주다가 아래 이미지에서 <strong>잠깐!!</strong></p><p><br></p><div class="figure center" style="width:;"><a class="fancybox" href="git2.png" title="여기만 바꿔주면 만사 오케이" data-caption="여기만 바꿔주면 만사 오케이" data-fancybox="default"><img class="fig-img" src="git2.png" alt="여기만 바꿔주면 만사 오케이"></a><span class="caption">여기만 바꿔주면 만사 오케이</span></div><p>기존에는 <code>vim</code>으로 되어있을 것이지만, 우리는 앞으로 <code>vscode</code>를 사용할 것이기 때문에 그에 맞는 선택지를 골라주면 된다.</p><p>이 다음은 예상하시겠지만 쭉 다음만 눌러주면 설치가 완료된다.</p><h3 id="컨텍스트-메뉴-확인하기"><a href="#컨텍스트-메뉴-확인하기" class="headerlink" title="컨텍스트 메뉴 확인하기"></a>컨텍스트 메뉴 확인하기</h3><div class="figure center" style="width:;"><a class="fancybox" href="context_menu.png" title="이런 메뉴창이 나온다면 성공" data-caption="이런 메뉴창이 나온다면 성공" data-fancybox="default"><img class="fig-img" src="context_menu.png" alt="이런 메뉴창이 나온다면 성공"></a><span class="caption">이런 메뉴창이 나온다면 성공</span></div><div class="alert info no-icon"><ul><li>Git GUI Here</li><li>Git Bash Here</li><li>Open with Code</li></ul></div><p>바탕화면이나 어디 다른 디렉토리 내에서 마우스 우클릭을 해보자. 위 사진처럼 3가지 컨텍스트 메뉴가 뜨면 <code>vscode</code> 및 <code>git</code> 설치 성공이다. <del>라데온은 무시하자</del></p><p>실험 삼아 <code>git bash</code> 를 띄워 <code>git</code> 을 입력해보면 설치가 잘 된 것을 확인해볼 수 있을 것이다.</p><h1 id="파이썬-설치하기"><a href="#파이썬-설치하기" class="headerlink" title="파이썬 설치하기"></a>파이썬 설치하기</h1><div class="figure center" style="width:;"><img class="fig-img" src="python1.png" alt="파이썬 로고"><span class="caption">파이썬 로고</span></div><p>이전과 같이 <strong><a href="https://www.python.org/downloads/" rel="external nofollow noopener noreferrer" target="_blank">파이썬 설치 링크</a></strong> 로 들어가 가급적 최신 버전의 파이썬을 설치하자. 언제나 최신이 짱이다. <del>업데이트를 게을리하지 않는 개발자가 되자</del></p><p>우리 개발자들은 파이썬의 명성에 대해 익히 들어왔다. 커뮤니티가 크니, 못하는 게 없다느니… 그러므로 그런 자랑이야기는 스킵하고, 일단 써봐야 알 것 아닌가. 설치나 해보자.</p><p><br></p><div class="figure center" style="width:;"><a class="fancybox" href="python2.png" title="출처: liquidweb.com/kb/how-to-install-python-on-windows/" data-caption="출처: liquidweb.com/kb/how-to-install-python-on-windows/" data-fancybox="default"><img class="fig-img" src="python2.png" alt="출처: liquidweb.com/kb/how-to-install-python-on-windows/"></a><span class="caption">출처: liquidweb.com/kb/how-to-install-python-on-windows/</span></div><p>필자의 경우에는 이미 설치가 되어있어서… 다른 분 사진을 빌려왔다.</p><p>버전 상관 없이 처음 설치하시는 분들은 저런 창을 보게 될텐데,</p><p><strong><span class="highlight-text danger">아래 Add python to PATH 를 무조건 체크해야한다. </span></strong></p><p>이미 겪어본 경험을 바탕으로 말하자면, 저 부분에서 체크를 까먹은 분들이 꽤 많다.<br>덕분에 적지 않은 분들이 파이썬 설치 확인 커맨드 입력시 <code>Command not found</code> 같은 통보(?)를 접하게 되는 불상사가…</p><p>설치가 모두 완료 되었으면</p><figure class="codeblock codeblock--tabbed"><figcaption><span>파이썬 설치확인</span><ul class="tabs"><li class="tab active">bash</li></ul></figcaption><div class="tabs-content"><figure class="highlight bash" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></tbody></table></figure></div></figure><p><code>git bash</code>를 켜서 다음의 명령어를 친 뒤 엔터를 눌러보자.<br>현재 설치한 파이썬 버전이 나오면 올바르게 설치한 것이다.</p><blockquote><p>안 나온다면 <a href="https://wxmin.tistory.com/121" rel="external nofollow noopener noreferrer" target="_blank">여기</a> 에서 34를 자기 버전에 맞게 바꾸어주면 된다.(ex. 37) 복잡해보이니 그냥 처음부터 PATH에 체크하자…</p></blockquote><h1 id="django-설치하기"><a href="#django-설치하기" class="headerlink" title="django 설치하기"></a>django 설치하기</h1><div class="figure center" style="width:;"><img class="fig-img" src="django1.png" alt="django 로고"><span class="caption">django 로고</span></div><p>django를 설치하기 위해서는 먼저 해야할 일이 있다.</p><p>바로 <strong>가상환경</strong>을 켜는 것.<br>가상환경이 무엇인지는 다음에 시간이 나면 간단히 링크를 걸어줄 생각이다.<br>일단 따라해보자.</p><p>순서는 다음과 같다.</p><div class="alert info no-icon"><ol><li>개발할 작업 디렉토리를 생성한다. (새 폴더 만들기)</li><li>마우스 우클릭을 통해 git bash를 연다. or vscode를 열어 터미널을 사용한다.(후자는 추후 설명)</li><li><code>python -m venv 가상환경 이름</code> 을 입력하고 엔터!</li><li>가상환경이 켠다.</li><li>django를 설치한다.</li><li><strong>앞으로도 django 개발시 꼭 가상환경을 켜고 시작한다.</strong></li></ol></div><h3 id="가상환경을-만들고-실행해보자"><a href="#가상환경을-만들고-실행해보자" class="headerlink" title="가상환경을 만들고, 실행해보자"></a>가상환경을 만들고, 실행해보자</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv 가상환경 이름</span><br></pre></td></tr></table></figure><p>같은 경우는 순서대로 이러한 뜻을 가지고 있다.<br>python 명령을 내리겠다. / make 만들겠다. / virtual environment, 가상환경을 / 이름은 이렇게!</p><p>주로 하는 가상환경이름은 <code>venv</code> or <code>myvenv</code> 이다.<br>필자는 <code>myvenv</code> 를 애용하니, 이걸 예시로 하자면<br><code>python -m venv myvenv</code> 가 되겠다!!</p><p>자 가상환경을 만들었으니 이제 켜봐야하지 않겠는가.<br><code>source 가상환경이름/Scripts/activate</code> 명령어를 치면 된다.</p><p>필자의 가상환경은 <code>myvenv</code> 라고 했으니</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source myvenv/Scripts/activate</span><br></pre></td></tr></table></figure><p>명령어를 입력하면 되는 것이다.</p><blockquote><p><code>source</code> 는 <code>.</code> 으로 대체가 가능하다.<br>되도록 <strong>tab</strong> 키를 눌러 자동완성으로 해야 오타가 적을 것이다.<br>예시를 기준으로 m 치고 탭! s치고 탭! a치고 탭!</p></blockquote><p>가상환경을 끄는 방법은 위처럼 복잡하지 않게</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><p>만 입력하면 된다.<br>아니면 그냥 껏다 키면 자동으로 꺼진다. 하하.</p><h2 id="가상환경을-켰으니-django를-설치하자"><a href="#가상환경을-켰으니-django를-설치하자" class="headerlink" title="가상환경을 켰으니 django를 설치하자."></a>가상환경을 켰으니 django를 설치하자.</h2><p>가상환경을 켜면, 터미널에 <code>(가상환경이름)</code> 이렇게 뜰 것이다. 이러면 가상환경이 켜져 있는 것이다.</p><p>이제 여기에</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django</span><br></pre></td></tr></table></figure><p>만 입력하면 끝이다.</p><p><del>django가 이렇게 쉽습니다.</del></p><p>django 설치를 확인하고 싶으시다면, 가상환경을 켜신 다음</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list</span><br></pre></td></tr></table></figure><p>이렇게 쳐보시면 django 가 리스트에 있을 것이다. 없으면… 설치 안 된 거죠 뭐.</p><p>여기까지 따라오셨다면, 모든 개발환경 세팅이 완료된 것입니다! 와우!</p><blockquote><p>pip를 업그레이드 해라 이런 텍스트가 뜰 때가 있는데, 그럼 나와있는 명령어를 그대로 입력하셔서 업그레이드하시면 됩니다!</p></blockquote><h2 id="끝내기-전에…"><a href="#끝내기-전에…" class="headerlink" title="끝내기 전에…"></a>끝내기 전에…</h2><div class="alert danger no-icon"><p><strong>앞으로 개발하실 때 꼭!! 가상환경 키고 시작하셔야 합니다!!</strong></p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;멋쟁이 사자처럼 7기&lt;br&gt;django 개발을 위한 vscod, git, python을 설치해보자!&lt;/p&gt;
    
    </summary>
    
      <category term="멋쟁이 사자처럼" scheme="https://caesiumy.github.io/categories/%EB%A9%8B%EC%9F%81%EC%9D%B4-%EC%82%AC%EC%9E%90%EC%B2%98%EB%9F%BC/"/>
    
      <category term="개발환경" scheme="https://caesiumy.github.io/categories/%EB%A9%8B%EC%9F%81%EC%9D%B4-%EC%82%AC%EC%9E%90%EC%B2%98%EB%9F%BC/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/"/>
    
      <category term="vscode" scheme="https://caesiumy.github.io/categories/%EB%A9%8B%EC%9F%81%EC%9D%B4-%EC%82%AC%EC%9E%90%EC%B2%98%EB%9F%BC/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/vscode/"/>
    
      <category term="git" scheme="https://caesiumy.github.io/categories/%EB%A9%8B%EC%9F%81%EC%9D%B4-%EC%82%AC%EC%9E%90%EC%B2%98%EB%9F%BC/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/vscode/git/"/>
    
    
      <category term="멋쟁이 사자처럼" scheme="https://caesiumy.github.io/tags/%EB%A9%8B%EC%9F%81%EC%9D%B4-%EC%82%AC%EC%9E%90%EC%B2%98%EB%9F%BC/"/>
    
      <category term="개발환경" scheme="https://caesiumy.github.io/tags/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/"/>
    
      <category term="vscode" scheme="https://caesiumy.github.io/tags/vscode/"/>
    
      <category term="python" scheme="https://caesiumy.github.io/tags/python/"/>
    
      <category term="git" scheme="https://caesiumy.github.io/tags/git/"/>
    
  </entry>
  
</feed>
